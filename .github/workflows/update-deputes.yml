name: Update deputes.json (daily, AMO10 L17)

on:
  workflow_dispatch:          # Lancement manuel possible
  schedule:
    - cron: "17 03 * * *"     # Tous les jours à 03:17 UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install unzip + jq
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip jq

      - name: Download AMO10 (L17) ZIP
        run: |
          set -eux
          curl -fsSL \
            "https://data.assemblee-nationale.fr/static/openData/repository/17/amo/deputes_actifs_mandats_actifs_organes/AMO10_deputes_actifs_mandats_actifs_organes.json.zip" \
            -o data.zip

      - name: Extract JSON files
        run: |
          set -eux
          rm -rf data
          mkdir -p data
          unzip -o data.zip -d data
          echo "Contenu extrait :"
          find data -maxdepth 3 -type f -name "*.json" | head -n 20

      # ====== NOUVEAU : construire groupes.json de manière robuste (PO -> sigle/libellé) ======
      - name: Build groupes.json (codes PO -> sigle/libellé)
        run: |
          set -eux
          mkdir -p deputes
          # Certains fichiers organe ont uid = {"#text":"PO..."} et d'autres uid = "PO..."
          jq -s '
            map(.organe) |
            map(select(.codeType == "GP")) |
            map({
              code:    (.uid?["#text"] // .uid // ""),
              sigle:   (.libelleAbrege // .acronyme // .libelle // ""),
              libelle: (.libelle       // .libelleAbrege // .acronyme // "")
            }) |
            map(select(.code != "")) |
            unique_by(.code)
          ' data/json/organe/*.json > deputes/groupes.json

          echo "Groupes comptés :"
          jq 'length' deputes/groupes.json

      # ====== Députés : parser AMO10 (acteur) et créer deputes.json ======
      - name: Build deputes.json (parser AMO10)
        run: |
          set -eux
          mkdir -p deputes

          # Lecture des acteurs ; on récupère id, nom, email (priorité AN),
          # mandat ASSEMBLEE (circo, département), mandat GP (code groupe)
          jq -s '
            map(
              .acteur
              | {
                  id:     (.uid["#text"] // ""),
                  nom:    (((.etatCivil.ident.prenom // "") + " " + (.etatCivil.ident.nom // "")) | gsub("^\\s+|\\s+$";"")),
                  # Emails : on collecte, puis on choisit l’adresse assemblee-nationale.fr si présente
                  email: (
                    ( [ (.adresses.adresse[]?
                          | select(.typeLibelle=="Mèl")
                          | .valElec) ] ) as $mails
                    | ( $mails[] | select(test("assemblee-nationale\\.fr$")) )
                      // ($mails[0] // "")
                  ),
                  _mAss: (
                    ( .mandats.mandat // [] )
                    | map(select(.typeOrgane=="ASSEMBLEE"))
                    | .[0]
                  ),
                  _mGp: (
                    ( .mandats.mandat // [] )
                    | map(select(.typeOrgane=="GP"))
                    | .[0]
                  )
                }
              | .circo  = (._mAss.election.lieu.numCirco   // "")
              | .dept   = (._mAss.election.lieu.departement // "")
              | .groupe = (._mGp.organes.organeRef // "")
              | del(._mAss, ._mGp)
            )
          ' data/json/acteur/*.json > deputes/deputes.json

          echo "Députés comptés :"
          jq 'length' deputes/deputes.json

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update deputes.json + groupes.json from AMO10 L17"
          file_pattern: |
            deputes/deputes.json
            deputes/groupes.json
